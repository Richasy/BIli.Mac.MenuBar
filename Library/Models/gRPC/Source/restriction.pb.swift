// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: bilibili/metadata/restriction/restriction.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// 模式类型
enum Bilibili_Metadata_Restriction_ModeType: SwiftProtobuf.Enum {
  typealias RawValue = Int

  /// 正常模式
  case normal // = 0

  /// 青少年模式
  case teenagers // = 1

  /// 课堂模式
  case lessons // = 2
  case UNRECOGNIZED(Int)

  init() {
    self = .normal
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .normal
    case 1: self = .teenagers
    case 2: self = .lessons
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  var rawValue: Int {
    switch self {
    case .normal: return 0
    case .teenagers: return 1
    case .lessons: return 2
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension Bilibili_Metadata_Restriction_ModeType: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  static var allCases: [Bilibili_Metadata_Restriction_ModeType] = [
    .normal,
    .teenagers,
    .lessons,
  ]
}

#endif  // swift(>=4.2)

/// 限制条件
struct Bilibili_Metadata_Restriction_Restriction {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// 青少年模式开关状态
  var teenagersMode: Bool = false

  /// 课堂模式开关状态
  var lessonsMode: Bool = false

  /// 模式类型(旧版)
  var mode: Bilibili_Metadata_Restriction_ModeType = .normal

  /// app 审核review状态
  var review: Bool = false

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

#if swift(>=5.5) && canImport(_Concurrency)
extension Bilibili_Metadata_Restriction_ModeType: @unchecked Sendable {}
extension Bilibili_Metadata_Restriction_Restriction: @unchecked Sendable {}
#endif  // swift(>=5.5) && canImport(_Concurrency)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "bilibili.metadata.restriction"

extension Bilibili_Metadata_Restriction_ModeType: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "NORMAL"),
    1: .same(proto: "TEENAGERS"),
    2: .same(proto: "LESSONS"),
  ]
}

extension Bilibili_Metadata_Restriction_Restriction: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".Restriction"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "teenagers_mode"),
    2: .standard(proto: "lessons_mode"),
    3: .same(proto: "mode"),
    4: .same(proto: "review"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularBoolField(value: &self.teenagersMode) }()
      case 2: try { try decoder.decodeSingularBoolField(value: &self.lessonsMode) }()
      case 3: try { try decoder.decodeSingularEnumField(value: &self.mode) }()
      case 4: try { try decoder.decodeSingularBoolField(value: &self.review) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.teenagersMode != false {
      try visitor.visitSingularBoolField(value: self.teenagersMode, fieldNumber: 1)
    }
    if self.lessonsMode != false {
      try visitor.visitSingularBoolField(value: self.lessonsMode, fieldNumber: 2)
    }
    if self.mode != .normal {
      try visitor.visitSingularEnumField(value: self.mode, fieldNumber: 3)
    }
    if self.review != false {
      try visitor.visitSingularBoolField(value: self.review, fieldNumber: 4)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Bilibili_Metadata_Restriction_Restriction, rhs: Bilibili_Metadata_Restriction_Restriction) -> Bool {
    if lhs.teenagersMode != rhs.teenagersMode {return false}
    if lhs.lessonsMode != rhs.lessonsMode {return false}
    if lhs.mode != rhs.mode {return false}
    if lhs.review != rhs.review {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
